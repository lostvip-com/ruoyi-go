// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: thingmodel/thingmodel.proto

package thingmodel

import (
	drivercommon "github.com/lostvip-com/lv_grpc_driver_proto/drivercommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationType int32

const (
	OperationType_UNSPECIFIED OperationType = 0
	// 下发相关
	OperationType_PROPERTY_SET                     OperationType = 1 // 下发属性设置请求
	OperationType_PROPERTY_GET                     OperationType = 2 // 下发属性查询请求
	OperationType_SERVICE_EXECUTE                  OperationType = 3 // 下发设备动作执行请求
	OperationType_PROPERTY_REPORT_RESPONSE         OperationType = 4 // 云端响应上报属性消息
	OperationType_EVENT_REPORT_RESPONSE            OperationType = 5 // 云端响应上报事件消息
	OperationType_DATA_BATCH_REPORT_RESPONSE       OperationType = 6 // 云端响应批量上报消息
	OperationType_PROPERTY_DESIRED_GET_RESPONSE    OperationType = 7 // 云端响应设备上报向云端获取属性期望值请求
	OperationType_PROPERTY_DESIRED_DELETE_RESPONSE OperationType = 8 // 云端响应设备上报向云端发送清除属性期望值请求
	OperationType_CUSTOM_MQTT_PUBLISH              OperationType = 9 //云端自定义topic 消息下发
	// 上报相关
	OperationType_PROPERTY_REPORT          OperationType = 20 // 属性上报
	OperationType_PROPERTY_SET_RESPONSE    OperationType = 21 // 响应云端下发属性请求
	OperationType_PROPERTY_GET_RESPONSE    OperationType = 22 // 响应云端下发属性查询请求
	OperationType_SERVICE_EXECUTE_RESPONSE OperationType = 23 // 响应云端下发设备服务调用请求
	OperationType_EVENT_REPORT             OperationType = 24 // 事件上报
	OperationType_DATA_BATCH_REPORT        OperationType = 25 // 设备批量上报数据
	OperationType_PROPERTY_DESIRED_GET     OperationType = 26 // 设备上报向云端获取属性期望值请求
	OperationType_PROPERTY_DESIRED_DELETE  OperationType = 27 // 设备上报向云端发送清除属性期望值请求
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "PROPERTY_SET",
		2:  "PROPERTY_GET",
		3:  "SERVICE_EXECUTE",
		4:  "PROPERTY_REPORT_RESPONSE",
		5:  "EVENT_REPORT_RESPONSE",
		6:  "DATA_BATCH_REPORT_RESPONSE",
		7:  "PROPERTY_DESIRED_GET_RESPONSE",
		8:  "PROPERTY_DESIRED_DELETE_RESPONSE",
		9:  "CUSTOM_MQTT_PUBLISH",
		20: "PROPERTY_REPORT",
		21: "PROPERTY_SET_RESPONSE",
		22: "PROPERTY_GET_RESPONSE",
		23: "SERVICE_EXECUTE_RESPONSE",
		24: "EVENT_REPORT",
		25: "DATA_BATCH_REPORT",
		26: "PROPERTY_DESIRED_GET",
		27: "PROPERTY_DESIRED_DELETE",
	}
	OperationType_value = map[string]int32{
		"UNSPECIFIED":                      0,
		"PROPERTY_SET":                     1,
		"PROPERTY_GET":                     2,
		"SERVICE_EXECUTE":                  3,
		"PROPERTY_REPORT_RESPONSE":         4,
		"EVENT_REPORT_RESPONSE":            5,
		"DATA_BATCH_REPORT_RESPONSE":       6,
		"PROPERTY_DESIRED_GET_RESPONSE":    7,
		"PROPERTY_DESIRED_DELETE_RESPONSE": 8,
		"CUSTOM_MQTT_PUBLISH":              9,
		"PROPERTY_REPORT":                  20,
		"PROPERTY_SET_RESPONSE":            21,
		"PROPERTY_GET_RESPONSE":            22,
		"SERVICE_EXECUTE_RESPONSE":         23,
		"EVENT_REPORT":                     24,
		"DATA_BATCH_REPORT":                25,
		"PROPERTY_DESIRED_GET":             26,
		"PROPERTY_DESIRED_DELETE":          27,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_thingmodel_thingmodel_proto_enumTypes[0].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_thingmodel_thingmodel_proto_enumTypes[0]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_thingmodel_thingmodel_proto_rawDescGZIP(), []int{0}
}

// ThingModelIssueMsg 消息下发
type ThingModelIssueMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationType OperationType          `protobuf:"varint,1,opt,name=operationType,proto3,enum=thingmodel.OperationType" json:"operationType,omitempty"`
	TraceId       string                 `protobuf:"bytes,2,opt,name=traceId,proto3" json:"traceId,omitempty"`      // 唯一标识
	GatewayId     int64                  `protobuf:"varint,3,opt,name=gatewayId,proto3" json:"gatewayId,omitempty"` // 下发的目标设备id
	DeviceId      int64                  `protobuf:"varint,4,opt,name=deviceId,proto3" json:"deviceId,omitempty"`   // 下发的目标设备id
	NeedAck       bool                   `protobuf:"varint,5,opt,name=needAck,proto3" json:"needAck,omitempty"`     // 0:不用确认 1:需要确认，否则重发
	ListData      []*Point               `protobuf:"bytes,6,rep,name=listData,proto3" json:"listData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThingModelIssueMsg) Reset() {
	*x = ThingModelIssueMsg{}
	mi := &file_thingmodel_thingmodel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThingModelIssueMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThingModelIssueMsg) ProtoMessage() {}

func (x *ThingModelIssueMsg) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_thingmodel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThingModelIssueMsg.ProtoReflect.Descriptor instead.
func (*ThingModelIssueMsg) Descriptor() ([]byte, []int) {
	return file_thingmodel_thingmodel_proto_rawDescGZIP(), []int{0}
}

func (x *ThingModelIssueMsg) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_UNSPECIFIED
}

func (x *ThingModelIssueMsg) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ThingModelIssueMsg) GetGatewayId() int64 {
	if x != nil {
		return x.GatewayId
	}
	return 0
}

func (x *ThingModelIssueMsg) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *ThingModelIssueMsg) GetNeedAck() bool {
	if x != nil {
		return x.NeedAck
	}
	return false
}

func (x *ThingModelIssueMsg) GetListData() []*Point {
	if x != nil {
		return x.ListData
	}
	return nil
}

// ThingModelResp 消息响应
type ThingModelResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TraceId       string                 `protobuf:"bytes,1,opt,name=TraceId,proto3" json:"TraceId,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Code          int32                  `protobuf:"varint,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	Extra         string                 `protobuf:"bytes,5,opt,name=Extra,proto3" json:"Extra,omitempty"`
	DeviceId      int64                  `protobuf:"varint,6,opt,name=deviceId,proto3" json:"deviceId,omitempty"` // 下发的目标设备id
	ListData      []*Point               `protobuf:"bytes,7,rep,name=listData,proto3" json:"listData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThingModelResp) Reset() {
	*x = ThingModelResp{}
	mi := &file_thingmodel_thingmodel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThingModelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThingModelResp) ProtoMessage() {}

func (x *ThingModelResp) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_thingmodel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThingModelResp.ProtoReflect.Descriptor instead.
func (*ThingModelResp) Descriptor() ([]byte, []int) {
	return file_thingmodel_thingmodel_proto_rawDescGZIP(), []int{1}
}

func (x *ThingModelResp) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ThingModelResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ThingModelResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ThingModelResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ThingModelResp) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *ThingModelResp) GetDeviceId() int64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *ThingModelResp) GetListData() []*Point {
	if x != nil {
		return x.ListData
	}
	return nil
}

type Point struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Code  string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`   //参量号
	Value string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` //参量值
	Time  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`   //采集时间
	// 下发数据时使用，上传数据忽略
	DataType      string `protobuf:"bytes,4,opt,name=dataType,proto3" json:"dataType,omitempty"` //数据类型 int32/float32/string/bool/byte
	Rate          string `protobuf:"bytes,5,opt,name=rate,proto3" json:"rate,omitempty"`         //倍率，默认1，100表示把设备采集值放大100倍
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_thingmodel_thingmodel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_thingmodel_thingmodel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_thingmodel_thingmodel_proto_rawDescGZIP(), []int{2}
}

func (x *Point) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Point) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Point) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Point) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Point) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

var File_thingmodel_thingmodel_proto protoreflect.FileDescriptor

var file_thingmodel_thingmodel_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x41, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6e, 0x65, 0x65, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xcb, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x69, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x2a, 0xdd, 0x03, 0x0a, 0x0d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x05, 0x12, 0x1e,
	0x0a, 0x1a, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x06, 0x12, 0x21,
	0x0a, 0x1d, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x49, 0x52,
	0x45, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x07, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45,
	0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x55, 0x53, 0x54, 0x4f,
	0x4d, 0x5f, 0x4d, 0x51, 0x54, 0x54, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x09,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x14, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54,
	0x59, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x15,
	0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x47, 0x45, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x17, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x18, 0x12, 0x15, 0x0a, 0x11, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44,
	0x45, 0x53, 0x49, 0x52, 0x45, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x1a, 0x12, 0x1b, 0x0a, 0x17,
	0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x53, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x1b, 0x32, 0x6b, 0x0a, 0x15, 0x54, 0x68, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x52, 0x0a, 0x12, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x4d, 0x73, 0x67, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x1a, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x6c, 0x0a, 0x13, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x13, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x4d, 0x73, 0x67, 0x1a, 0x1c, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x6f, 0x73, 0x74, 0x76, 0x69, 0x70, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x76, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_thingmodel_thingmodel_proto_rawDescOnce sync.Once
	file_thingmodel_thingmodel_proto_rawDescData []byte
)

func file_thingmodel_thingmodel_proto_rawDescGZIP() []byte {
	file_thingmodel_thingmodel_proto_rawDescOnce.Do(func() {
		file_thingmodel_thingmodel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_thingmodel_thingmodel_proto_rawDesc), len(file_thingmodel_thingmodel_proto_rawDesc)))
	})
	return file_thingmodel_thingmodel_proto_rawDescData
}

var file_thingmodel_thingmodel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_thingmodel_thingmodel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_thingmodel_thingmodel_proto_goTypes = []any{
	(OperationType)(0),                  // 0: thingmodel.OperationType
	(*ThingModelIssueMsg)(nil),          // 1: thingmodel.ThingModelIssueMsg
	(*ThingModelResp)(nil),              // 2: thingmodel.ThingModelResp
	(*Point)(nil),                       // 3: thingmodel.Point
	(*timestamppb.Timestamp)(nil),       // 4: google.protobuf.Timestamp
	(*drivercommon.CommonResponse)(nil), // 5: drivercommon.CommonResponse
}
var file_thingmodel_thingmodel_proto_depIdxs = []int32{
	0, // 0: thingmodel.ThingModelIssueMsg.operationType:type_name -> thingmodel.OperationType
	3, // 1: thingmodel.ThingModelIssueMsg.listData:type_name -> thingmodel.Point
	3, // 2: thingmodel.ThingModelResp.listData:type_name -> thingmodel.Point
	4, // 3: thingmodel.Point.time:type_name -> google.protobuf.Timestamp
	1, // 4: thingmodel.ThingModelDownService.ThingModelMsgIssue:input_type -> thingmodel.ThingModelIssueMsg
	1, // 5: thingmodel.ThingModelUpService.ThingModelMsgReport:input_type -> thingmodel.ThingModelIssueMsg
	2, // 6: thingmodel.ThingModelDownService.ThingModelMsgIssue:output_type -> thingmodel.ThingModelResp
	5, // 7: thingmodel.ThingModelUpService.ThingModelMsgReport:output_type -> drivercommon.CommonResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_thingmodel_thingmodel_proto_init() }
func file_thingmodel_thingmodel_proto_init() {
	if File_thingmodel_thingmodel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_thingmodel_thingmodel_proto_rawDesc), len(file_thingmodel_thingmodel_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_thingmodel_thingmodel_proto_goTypes,
		DependencyIndexes: file_thingmodel_thingmodel_proto_depIdxs,
		EnumInfos:         file_thingmodel_thingmodel_proto_enumTypes,
		MessageInfos:      file_thingmodel_thingmodel_proto_msgTypes,
	}.Build()
	File_thingmodel_thingmodel_proto = out.File
	file_thingmodel_thingmodel_proto_goTypes = nil
	file_thingmodel_thingmodel_proto_depIdxs = nil
}
