// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: cloudinstance/cloudinstance.proto

package cloudinstance

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryCloudInstanceByPlatformRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IotPlatform   string                 `protobuf:"bytes,1,opt,name=iotPlatform,proto3" json:"iotPlatform,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCloudInstanceByPlatformRequest) Reset() {
	*x = QueryCloudInstanceByPlatformRequest{}
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCloudInstanceByPlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCloudInstanceByPlatformRequest) ProtoMessage() {}

func (x *QueryCloudInstanceByPlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCloudInstanceByPlatformRequest.ProtoReflect.Descriptor instead.
func (*QueryCloudInstanceByPlatformRequest) Descriptor() ([]byte, []int) {
	return file_cloudinstance_cloudinstance_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCloudInstanceByPlatformRequest) GetIotPlatform() string {
	if x != nil {
		return x.IotPlatform
	}
	return ""
}

type QueryCloudInstanceByPlatformResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CloudInstanceId   int64                  `protobuf:"varint,1,opt,name=CloudInstanceId,proto3" json:"CloudInstanceId,omitempty"`
	Address           string                 `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	CloudInstanceName string                 `protobuf:"bytes,3,opt,name=CloudInstanceName,proto3" json:"CloudInstanceName,omitempty"`
	Status            string                 `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryCloudInstanceByPlatformResponse) Reset() {
	*x = QueryCloudInstanceByPlatformResponse{}
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCloudInstanceByPlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCloudInstanceByPlatformResponse) ProtoMessage() {}

func (x *QueryCloudInstanceByPlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCloudInstanceByPlatformResponse.ProtoReflect.Descriptor instead.
func (*QueryCloudInstanceByPlatformResponse) Descriptor() ([]byte, []int) {
	return file_cloudinstance_cloudinstance_proto_rawDescGZIP(), []int{1}
}

func (x *QueryCloudInstanceByPlatformResponse) GetCloudInstanceId() int64 {
	if x != nil {
		return x.CloudInstanceId
	}
	return 0
}

func (x *QueryCloudInstanceByPlatformResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryCloudInstanceByPlatformResponse) GetCloudInstanceName() string {
	if x != nil {
		return x.CloudInstanceName
	}
	return ""
}

func (x *QueryCloudInstanceByPlatformResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DriverRegisterRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TraceId          string                 `protobuf:"bytes,1,opt,name=TraceId,proto3" json:"TraceId,omitempty"`
	DriverInstanceId int64                  `protobuf:"varint,2,opt,name=DriverInstanceId,proto3" json:"DriverInstanceId,omitempty"` // 驱动唯一标识,可以为空
	DriverAddress    string                 `protobuf:"bytes,3,opt,name=DriverAddress,proto3" json:"DriverAddress,omitempty"`        // 服务器推送数据使用
	DriverType       string                 `protobuf:"bytes,4,opt,name=DriverType,proto3" json:"DriverType,omitempty"`              // 使用的云平台
	IotPlatform      string                 `protobuf:"bytes,5,opt,name=IotPlatform,proto3" json:"IotPlatform,omitempty"`            // 使用的云平台
	DriverName       string                 `protobuf:"bytes,6,opt,name=DriverName,proto3" json:"DriverName,omitempty"`              // 使用的云平台
	Extra            string                 `protobuf:"bytes,7,opt,name=Extra,proto3" json:"Extra,omitempty"`                        //备用字段
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DriverRegisterRequest) Reset() {
	*x = DriverRegisterRequest{}
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRegisterRequest) ProtoMessage() {}

func (x *DriverRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRegisterRequest.ProtoReflect.Descriptor instead.
func (*DriverRegisterRequest) Descriptor() ([]byte, []int) {
	return file_cloudinstance_cloudinstance_proto_rawDescGZIP(), []int{2}
}

func (x *DriverRegisterRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *DriverRegisterRequest) GetDriverInstanceId() int64 {
	if x != nil {
		return x.DriverInstanceId
	}
	return 0
}

func (x *DriverRegisterRequest) GetDriverAddress() string {
	if x != nil {
		return x.DriverAddress
	}
	return ""
}

func (x *DriverRegisterRequest) GetDriverType() string {
	if x != nil {
		return x.DriverType
	}
	return ""
}

func (x *DriverRegisterRequest) GetIotPlatform() string {
	if x != nil {
		return x.IotPlatform
	}
	return ""
}

func (x *DriverRegisterRequest) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *DriverRegisterRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type DriverRegisterResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TraceId          string                 `protobuf:"bytes,1,opt,name=TraceId,proto3" json:"TraceId,omitempty"`
	Msg              string                 `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Code             int32                  `protobuf:"varint,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Success          bool                   `protobuf:"varint,4,opt,name=Success,proto3" json:"Success,omitempty"`
	DriverInstanceId int64                  `protobuf:"varint,5,opt,name=DriverInstanceId,proto3" json:"DriverInstanceId,omitempty"` // 驱动唯一标识,可以为空
	Extra            string                 `protobuf:"bytes,6,opt,name=Extra,proto3" json:"Extra,omitempty"`                        //备用字段
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DriverRegisterResponse) Reset() {
	*x = DriverRegisterResponse{}
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRegisterResponse) ProtoMessage() {}

func (x *DriverRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cloudinstance_cloudinstance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRegisterResponse.ProtoReflect.Descriptor instead.
func (*DriverRegisterResponse) Descriptor() ([]byte, []int) {
	return file_cloudinstance_cloudinstance_proto_rawDescGZIP(), []int{3}
}

func (x *DriverRegisterResponse) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *DriverRegisterResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DriverRegisterResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DriverRegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DriverRegisterResponse) GetDriverInstanceId() int64 {
	if x != nil {
		return x.DriverInstanceId
	}
	return 0
}

func (x *DriverRegisterResponse) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_cloudinstance_cloudinstance_proto protoreflect.FileDescriptor

var file_cloudinstance_cloudinstance_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x47, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6f, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xb0, 0x01, 0x0a, 0x24,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb,
	0x01, 0x0a, 0x15, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6f, 0x74, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0xb4, 0x01, 0x0a,
	0x16, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x32, 0x8d, 0x02, 0x0a, 0x14, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a,
	0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x32, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6c, 0x6f, 0x73, 0x74, 0x76, 0x69, 0x70, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x76,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_cloudinstance_cloudinstance_proto_rawDescOnce sync.Once
	file_cloudinstance_cloudinstance_proto_rawDescData []byte
)

func file_cloudinstance_cloudinstance_proto_rawDescGZIP() []byte {
	file_cloudinstance_cloudinstance_proto_rawDescOnce.Do(func() {
		file_cloudinstance_cloudinstance_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloudinstance_cloudinstance_proto_rawDesc), len(file_cloudinstance_cloudinstance_proto_rawDesc)))
	})
	return file_cloudinstance_cloudinstance_proto_rawDescData
}

var file_cloudinstance_cloudinstance_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cloudinstance_cloudinstance_proto_goTypes = []any{
	(*QueryCloudInstanceByPlatformRequest)(nil),  // 0: cloudinstance.QueryCloudInstanceByPlatformRequest
	(*QueryCloudInstanceByPlatformResponse)(nil), // 1: cloudinstance.QueryCloudInstanceByPlatformResponse
	(*DriverRegisterRequest)(nil),                // 2: cloudinstance.DriverRegisterRequest
	(*DriverRegisterResponse)(nil),               // 3: cloudinstance.DriverRegisterResponse
}
var file_cloudinstance_cloudinstance_proto_depIdxs = []int32{
	0, // 0: cloudinstance.CloudInstanceService.QueryCloudInstanceByPlatform:input_type -> cloudinstance.QueryCloudInstanceByPlatformRequest
	2, // 1: cloudinstance.CloudInstanceService.DriverReportPlatformInfo:input_type -> cloudinstance.DriverRegisterRequest
	1, // 2: cloudinstance.CloudInstanceService.QueryCloudInstanceByPlatform:output_type -> cloudinstance.QueryCloudInstanceByPlatformResponse
	3, // 3: cloudinstance.CloudInstanceService.DriverReportPlatformInfo:output_type -> cloudinstance.DriverRegisterResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cloudinstance_cloudinstance_proto_init() }
func file_cloudinstance_cloudinstance_proto_init() {
	if File_cloudinstance_cloudinstance_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloudinstance_cloudinstance_proto_rawDesc), len(file_cloudinstance_cloudinstance_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloudinstance_cloudinstance_proto_goTypes,
		DependencyIndexes: file_cloudinstance_cloudinstance_proto_depIdxs,
		MessageInfos:      file_cloudinstance_cloudinstance_proto_msgTypes,
	}.Build()
	File_cloudinstance_cloudinstance_proto = out.File
	file_cloudinstance_cloudinstance_proto_goTypes = nil
	file_cloudinstance_cloudinstance_proto_depIdxs = nil
}
